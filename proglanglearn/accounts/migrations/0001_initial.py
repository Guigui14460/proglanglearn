# Generated by Django 2.2.2 on 2019-06-26 18:59

import accounts.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Nom du langage de programmation')),
            ],
            options={
                'verbose_name': 'Langage',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Nom du tag')),
            ],
            options={
                'verbose_name': 'Tag',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_dev', models.BooleanField(default=False, verbose_name='Est un développeur')),
                ('is_student', models.BooleanField(default=False, verbose_name='Est un étudiant en informatique')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Est un formateur')),
                ('image', models.ImageField(default='user_pictures/default.png', upload_to='user_pictures/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg'])], verbose_name='Image de profil')),
                ('country', models.CharField(max_length=30)),
                ('biography', models.TextField(blank=True, max_length=1500, null=True, verbose_name='Biographie')),
                ('strike', models.PositiveSmallIntegerField(default=0, verbose_name='Signalement')),
                ('email_confirmed', models.BooleanField(default=False, verbose_name='Addresse e-mail confirmée')),
                ('level', models.PositiveSmallIntegerField(default=1, verbose_name='Niveau')),
                ('level_experience', models.PositiveIntegerField(default=0, verbose_name='Expérience acquise')),
                ('favorite_articles', accounts.fields.StringListField(blank=True, default='', null=True, verbose_name='Articles favoris')),
                ('favorite_subjects', accounts.fields.StringListField(blank=True, default='', null=True, verbose_name='Sujets marqués comme favoris')),
                ('tutorial_finished', accounts.fields.StringListField(blank=True, default='', null=True, verbose_name='Tutoriels marqués comme terminé')),
                ('github_username', models.CharField(blank=True, max_length=100, null=True, verbose_name="Nom d'utilisateur/Email Github")),
                ('links', models.TextField(blank=True, null=True)),
                ('languages_learnt', models.ManyToManyField(blank=True, to='accounts.Language', verbose_name='Compétences (langages ou framework)')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur associé')),
            ],
            options={
                'verbose_name': 'Profil',
                'ordering': ['user', 'level'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entreprise', models.CharField(max_length=50, verbose_name="Nom de l'entreprise")),
                ('employment', models.CharField(max_length=250, verbose_name="Type d'emploi")),
                ('entry_date', models.DateField(verbose_name="Date d'entrée")),
                ('exit_date', models.DateField(verbose_name='Date de sortie')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile')),
            ],
            options={
                'verbose_name': 'Expérience',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(max_length=50, verbose_name="Nom de l'école")),
                ('degree', models.CharField(max_length=50, verbose_name='Diplôme')),
                ('entry_date', models.DateField(verbose_name="Date d'entrée")),
                ('exit_date', models.DateField(verbose_name='Date de sortie')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile')),
            ],
            options={
                'verbose_name': 'Éducation',
            },
        ),
    ]
